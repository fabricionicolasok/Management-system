<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        EARBkKv1/3AoD9XZbsQMAAAAAElFTkSuQmCC
</value>
  </data>
</root>